name: Publish Package to npm

# Trigger this workflow whenever a new release is published
on:
  release:
    types: [published]

# Grant write permissions to the repository contents so we can push version updates
permissions:
  contents: write

jobs:
  publish:
    runs-on: ubuntu-latest
    
    steps:
      # Step 1: Check out the repository's code at the default branch
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.event.repository.default_branch }}

      # Step 2: Set up a Node.js environment and configure npm to use the official registry
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm ci

      # Step 4: Run the build
      - name: Build
        run: npm run build

      # Step 5: Update package.json to match the release tag
      - name: Update package.json with release tag
        run: |
          TAG="${{ github.event.release.tag_name }}"
          echo "Updating package.json version to $TAG"
          npm version "$TAG" --no-git-tag-version
          
      # Step 6: Commit and push the updated package.json and package-lock.json back to the repo
      - name: Commit and push version update
        run: |
          TAG="${{ github.event.release.tag_name }}"
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add package.json package-lock.json
          git commit -m "Update package.json to version $TAG"
          git push origin ${{ github.event.repository.default_branch }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 7: Publish the new version to npm
      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}